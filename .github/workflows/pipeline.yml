name: pipeline

on:
  push:
    branches:
      - "*"
    tags:
      - "*"
  pull_request:
    types: [opened, reopened, synchronize]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:

    strategy:
      matrix:
        os: [
          ubuntu-latest,
          macos-11,
          macos-12
        ]
        include:
          - os: ubuntu-latest
            friendlyName: Build - Ubuntu
          - os: macos-11
            friendlyName: Build - MacOS 11
          - os: macos-12
            friendlyName: Build - MacOS 12

    name: ${{ matrix.friendlyName }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      
      - name: Install Deps
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: |
          sudo apt-get install -y libossp-uuid-dev
          
      - name: Setup
        id: config
        run: |      
          # setup params
          CPU_ARCH=$(uname -p)
          OUTPUT_DIR="${GITHUB_WORKSPACE}/linux/${CPU_ARCH}"
          
          # create output dir
          mkdir -p ${OUTPUT_DIR}
          
          echo  "OUTPUT_DIR=${OUTPUT_DIR}" >> "$GITHUB_OUTPUT"
          echo  "CPU_ARCH=${CPU_ARCH}" >> "$GITHUB_OUTPUT"

      - name: Configure
        run: |        
          # configure make
          ./configure \
            --disable-rpath \
            --prefix="${{ steps.config.outputs.OUTPUT_DIR }}" \
            --with-uuid="ossp"
          
          # configure LD
          export LD_RUN_PATH='${{ '$ORIGIN' }}/../lib'
        env:
          RELAX_DATA_DIR_PERMISSIONS: true

      - name: Make
        run: |
          # make the app
          make
          make check
          make install-strip
        env:
          RELAX_DATA_DIR_PERMISSIONS: true

      - name: Archive
        run: |
          # remove things we dont need
          #rm -rf "${{ steps.config.outputs.OUTPUT_DIR }}/include"
          
          # compile release file
          cd "${{ steps.config.outputs.OUTPUT_DIR }}"
          zip -r "linux-${{ steps.config.outputs.CPU_ARCH }}.zip" .
          
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_unmatched_files: false
          generate_release_notes: true
          files: |
            ${{ steps.config.outputs.OUTPUT_DIR }}/linux-${{ steps.config.outputs.CPU_ARCH }}.zip
          